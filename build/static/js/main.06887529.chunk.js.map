{"version":3,"sources":["components/Card.module.css","App.module.css","components/SearchBar.module.css","components/Cards.module.css","views/CitiesPage.module.css","components/Card.jsx","components/Cards.jsx","components/SearchBar.jsx","views/CitiesPage.js","views/CityDetail.js","App.js","services/fetchCoords.js","serviceWorker.js","index.js"],"names":["module","exports","Card","props","max","min","name","img","onCLose","primary","cityId","className","Styles","card","to","button","onClick","src","alt","temps","Temp","label","temp","Cards","cities","onClose","styles","cards","map","city","id","SearchBar","onSearch","HandleOnSearch","input","document","getElementById","value","placeholder","autoComplete","onKeyPress","e","key","CitiesPage","data","handleOnclose","citiesContainer","length","textAlign","width","marginTop","fontSie","CityDetail","App","React","useState","setData","useEffect","navigator","geolocation","getCurrentPosition","pos","lat","lon","fetch","then","r","json","recurso","undefined","main","ciudad","Math","round","temp_min","temp_max","weather","icon","wind","speed","clouds","all","latitud","coord","longitud","oldCities","alert","fetchCoords","coords","latitude","longitude","app","bkg","container","path","exact","prevData","filter","render","match","find","params","Boolean","window","location","hostname","ReactDOM","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.06887529.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__J8S_4\",\"temp\":\"Card_temp__2iu50\",\"temps\":\"Card_temps__2pJqb\",\"primary\":\"Card_primary__3hCfT\",\"name\":\"Card_name__3nTyb\",\"button\":\"Card_button__3ZY2R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1R1HF\",\"bkg\":\"App_bkg__1F_jS\",\"container\":\"App_container__1_mBx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"SearchBar_button__nLfcS\",\"SearchBar\":\"SearchBar_SearchBar__RJGsi\",\"input\":\"SearchBar_input__3DSvT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Cards\":\"Cards_Cards__151eA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"citiesContainer\":\"CitiesPage_citiesContainer__Bzd_e\"};","import React from 'react';\nimport Styles from \"./Card.module.css\";\nimport { link } from \"react-router-dom\";\n\nexport default function Card(props) {\n  const {max, min, name, img, onCLose, primary, cityId} = props;\n  // acá va tu código\n  return (\n   <div className={`${Styles.card} ${primary ? Styles.primary : \"\"}`}>\n    <link to={`/city/${cityId}`} className={Styles.name}>{name}\n        {!primary && <button className={Styles.button} onClick={onCLose}>X</button>}\n    </link>   \n     <img src={`http://openweathermap.org/img/wn/${img}@2x.png`} alt=\"Icono del clima\" />\n\n    <div className={Styles.temps}>\n      <Temp label=\"Min\" temp={min} />\n      <Temp label=\"Max\" temp={max} />\n   </div>\n  </div>\n);\n}\n\nfunction Temp({ label, temp }) {\n  return (\n    <div className={Styles.temp}>\n      <span>{label}</span>\n      <span>{temp}°</span>\n    </div>\n  );\n\n}","import React from \"react\";\nimport Card from \"./Card\";\nimport styles from \"./Cards.module.css\";\n\nexport default function Cards({ cities, onClose }) {\n  // acá va tu código\n  // tip, podés usar un map\n  return (\n    <div className={styles.cards}>\n    {cities.map((city) => (\n      <Card \n      key={city.id}\n      cityId={city.id} \n      name={city.name} \n      min={city.min} \n      max={city.max} \n      img={city.img}\n      onClose={() => onClose(city.id)}\n      />\n    ))}\n  </div>\n  );\n }","import React from 'react';\nimport styles from \"./SearchBar.module.css\";\n\nexport default function SearchBar({ onSearch }) {\n  // acá va tu código\n  const HandleOnSearch = () =>{\n    const input = document.getElementById(\"searchInput\");\n  onSearch(input.value);\n  input.value= \"\";\n  };\n\n  return (\n    <div className={styles.SearchBar}>\n    <input className={styles.input} id=\"searchInput\" placeholder='Agregar una ciudad.' autoComplete='off' onKeyPress={(e) => { if(e.key === \"Enter\") HandleOnSearch();}} />\n    <button className={styles.button} onClick={HandleOnSearch}>+</button>\n  </div>\n  ); \n}","import React from \"react\";\r\nimport Card from \"../components/Card.jsx\";\r\nimport Cards from \"../components/Cards.jsx\";\r\nimport SearchBar from \"../components/SearchBar.jsx\";\r\n\r\nimport styles from \"./CitiesPage.module.css\";\r\n\r\nfunction CitiesPage({data, handleOnclose, onSearch}){\r\n    return(\r\n<>\r\n  <div>\r\n        <SearchBar onSearch={onSearch} />\r\n      </div>\r\n      <div className={styles.citiesContainer}>\r\n        {data.length > 0 ? (\r\n        <>\r\n        <Card\r\n          primary\r\n          max={data[data.length - 1].max}\r\n          min={data[data.length - 1].min}\r\n          name={data[data.length - 1].name}\r\n          img={data[data.length - 1].img}\r\n          //onClose={() => alert(Cairns.name)}\r\n        />\r\n        <Cards cities={data} onClose={handleOnclose} />\r\n</>\r\n) : (\r\n  <span\r\n    styles={{\r\n      textAlign: \"center\",\r\n      width: \"70vw\",\r\n      marginTop: \"1rem\",\r\n      fontSie: \"2rem\",\r\n      }}\r\n    >\r\n      Agrega una nueva ciudad\r\n      </span>\r\n      )}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\nexport default CitiesPage;","import React from \"react\";\r\n\r\nfunction CityDetail({ city }) {\r\n    return <div>{city.name}</div>;\r\n}\r\n\r\nexport default CityDetail;","import React, {useEffect, useState} from 'react';\nimport { Route } from \"react-router-dom\";\n\nimport fetchCoords from './services/fetchCoords';\nimport styles from \"./App.module.css\";\n\n//import { Cairns } from './data.js';\nimport CitiesPage from './views/CitiesPage';\nimport CityDetail from './views/CityDetail';\n\n//const apiKey = process.env.REACT_APP_APIKEY;\nconst apiKey = 'aff733325cf6a93a43cab5daed100d88';\n\n\nfunction App() {\nconst [data, setData] = React.useState([]);\n\n\nfunction onSearch(ciudad) {\n  fetch(\n    `https://api.openweathermap.org/data/2.5/weather?q=${ciudad}&appid=${apiKey}&units=metric`\n    )\n    .then(r => r.json())\n    .then((recurso) => {\n      if(recurso.main !== undefined){\n        const ciudad = {\n          min: Math.round(recurso.main.temp_min),\n          max: Math.round(recurso.main.temp_max),\n          img: recurso.weather[0].icon,\n          id: recurso.id,\n          wind: recurso.wind.speed,\n          temp: recurso.main.temp,\n          name: recurso.name,\n          weather: recurso.weather[0].main,\n          clouds: recurso.clouds.all,\n          latitud: recurso.coord.lat,\n          longitud: recurso.coord.lon\n        };\n        setData(oldCities => [...oldCities, ciudad]);\n      } else {\n        alert(\"Ciudad no encontrada\");\n      }\n    });\n\n  }\n\nfunction handleOnclose(id){\n  setData((prevData) => {\n    return prevData.filter((city) => city.id !== id);\n    });\n}\n\nReact.useEffect(() => {\n  if(navigator.geolocation)\n  navigator.geolocation.getCurrentPosition((pos) => {\n    fetchCoords(pos.coords.latitude, pos.coords.longitude, setData);\n  });\n}, []);\n\n  return (\n    <div className={styles.app}>\n      <div className={styles.bkg} />\n      <div className={styles.container}>\n        <Route path=\"/\" exact>\n          <CitiesPage data={data} handleOnclose={handleOnclose} onSearch={onSearch} />\n        </Route>\n        <Route \n        path=\"/city/:id\"\n        render={({match}) => {\n          const city= data.find((city) => city.id === match.params.id);\n          return <CityDetail city={city} />;\n        }}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","\r\nconst apiKey = 'aff733325cf6a93a43cab5daed100d88';\r\n\r\nexport default function fetchCoords(lat, lon, setData) {\r\n    fetch(\r\n      `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${apiKey}&units=metric`\r\n      )\r\n      .then(r => r.json())\r\n      .then((recurso) => {\r\n        if(recurso.main !== undefined){\r\n          const ciudad = {\r\n            min: Math.round(recurso.main.temp_min),\r\n            max: Math.round(recurso.main.temp_max),\r\n            img: recurso.weather[0].icon,\r\n            id: recurso.id,\r\n            wind: recurso.wind.speed,\r\n            temp: recurso.main.temp,\r\n            name: recurso.name,\r\n            weather: recurso.weather[0].main,\r\n            clouds: recurso.clouds.all,\r\n            latitud: recurso.coord.lat,\r\n            longitud: recurso.coord.lon\r\n          };\r\n          setData(oldCities => [...oldCities, ciudad]);\r\n        } else {\r\n          alert(\"Ciudad no encontrada\");\r\n        }\r\n      });\r\n  \r\n    }","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>,\n    document.getElementById('root')\n  );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}